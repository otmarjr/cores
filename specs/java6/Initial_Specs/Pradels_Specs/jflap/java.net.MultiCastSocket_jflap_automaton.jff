<?xml version="1.0" encoding="UTF-8" standalone="no"?><structure><type>fa</type><automaton><state id="0" name="q0"/><state id="1" name="q1"/><state id="2" name="q2"><initial/></state><state id="3" name="q3"><final/></state><state id="4" name="q4"/><transition><from>0</from><to>0</to><read>java.net.MulticastSocket.getNetworkInterface()</read></transition><transition><from>1</from><to>1</to><read>java.net.MulticastSocket.getNetworkInterface()</read></transition><transition><from>0</from><to>0</to><read>java.net.MulticastSocket.getInterface()</read></transition><transition><from>1</from><to>1</to><read>java.net.MulticastSocket.getInterface()</read></transition><transition><from>0</from><to>0</to><read>java.net.MulticastSocket.send()</read></transition><transition><from>1</from><to>1</to><read>java.net.MulticastSocket.send()</read></transition><transition><from>4</from><to>4</to><read>java.net.MulticastSocket.send()</read></transition><transition><from>4</from><to>1</to><read>java.net.MulticastSocket.leaveGroup()</read></transition><transition><from>1</from><to>1</to><read>java.net.MulticastSocket.leaveGroup()</read></transition><transition><from>0</from><to>0</to><read>java.net.MulticastSocket.setInterface()</read></transition><transition><from>1</from><to>1</to><read>java.net.MulticastSocket.setInterface()</read></transition><transition><from>0</from><to>0</to><read>java.net.MulticastSocket.setNetworkInterface()</read></transition><transition><from>1</from><to>1</to><read>java.net.MulticastSocket.setNetworkInterface()</read></transition><transition><from>0</from><to>0</to><read>java.net.MulticastSocket.getTimeToLive()</read></transition><transition><from>1</from><to>1</to><read>java.net.MulticastSocket.getTimeToLive()</read></transition><transition><from>4</from><to>4</to><read>java.net.MulticastSocket.getTimeToLive()</read></transition><transition><from>4</from><to>3</to><read>java.net.MulticastSocket.close()</read></transition><transition><from>4</from><to>4</to><read>java.net.MulticastSocket.receive()</read></transition><transition><from>0</from><to>3</to><read>java.net.MulticastSocket.close()</read></transition><transition><from>1</from><to>3</to><read>java.net.MulticastSocket.close()</read></transition><transition><from>2</from><to>0</to><read>java.net.MulticastSocket.&lt;init&gt;()</read></transition><transition><from>3</from><to>3</to><read>java.net.MulticastSocket.isClosed()</read></transition><transition><from>0</from><to>0</to><read>java.net.MulticastSocket.getLoopbackMode()</read></transition><transition><from>1</from><to>1</to><read>java.net.MulticastSocket.getLoopbackMode()</read></transition><transition><from>4</from><to>4</to><read>java.net.MulticastSocket.getLoopbackMode()</read></transition><transition><from>0</from><to>4</to><read>java.net.MulticastSocket.joinGroup()</read></transition><transition><from>0</from><to>0</to><read>java.net.MulticastSocket.setLoopbackMode()</read></transition><transition><from>1</from><to>1</to><read>java.net.MulticastSocket.setLoopbackMode()</read></transition><transition><from>4</from><to>4</to><read>java.net.MulticastSocket.setLoopbackMode()</read></transition><transition><from>1</from><to>4</to><read>java.net.MulticastSocket.joinGroup()</read></transition><transition><from>0</from><to>0</to><read>java.net.MulticastSocket.setTimeToLive()</read></transition><transition><from>1</from><to>1</to><read>java.net.MulticastSocket.setTimeToLive()</read></transition><transition><from>4</from><to>4</to><read>java.net.MulticastSocket.setTimeToLive()</read></transition><transition><from>4</from><to>4</to><read>java.net.MulticastSocket.joinGroup()</read></transition></automaton></structure>